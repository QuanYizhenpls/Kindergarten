// <auto-generated />
using System;
using KinderDbContext.Connections;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KinderDbContext.Migrations
{
    [DbContext(typeof(SQLServerDbContext))]
    partial class SQLServerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("KinderData.Entities.Agreement", b =>
                {
                    b.Property<Guid>("Agreement_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Dismissal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmploymentContract")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SickLeave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Vacation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Agreement_Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("KinderData.Entities.Employee", b =>
                {
                    b.Property<Guid>("Employee_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Experience")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Employee_Id");

                    b.HasIndex("GroupId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("KinderData.Entities.EmployeeData", b =>
                {
                    b.Property<Guid>("EmployeeData_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmploymentRecord")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("INN")
                        .HasColumnType("int");

                    b.Property<int>("Pasport")
                        .HasColumnType("int");

                    b.Property<int>("SNILS")
                        .HasColumnType("int");

                    b.HasKey("EmployeeData_Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeDatas");
                });

            modelBuilder.Entity("KinderData.Entities.Group", b =>
                {
                    b.Property<Guid>("Group_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("KindergartnerId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Group_Id");

                    b.HasIndex("KindergartnerId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("KinderData.Entities.Kindergartner", b =>
                {
                    b.Property<Guid>("Kindergartner_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ParentsContactInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Kindergartner_Id");

                    b.ToTable("Kindergartners");
                });

            modelBuilder.Entity("KinderData.Entities.Plan", b =>
                {
                    b.Property<Guid>("Plan_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DateOfTheEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Development")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("GroupId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Plan_Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("GroupId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("KinderData.Entities.Salary", b =>
                {
                    b.Property<Guid>("Salary_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Allowance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Penalty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Prepayment")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Wage")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Salary_Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("KinderData.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Middlename")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("KinderData.Entities.Agreement", b =>
                {
                    b.HasOne("KinderData.Entities.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("KinderData.Entities.Employee", b =>
                {
                    b.HasOne("KinderData.Entities.Group", "Groups")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("KinderData.Entities.EmployeeData", b =>
                {
                    b.HasOne("KinderData.Entities.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });

            modelBuilder.Entity("KinderData.Entities.Group", b =>
                {
                    b.HasOne("KinderData.Entities.Kindergartner", "Kindergartners")
                        .WithMany()
                        .HasForeignKey("KindergartnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kindergartners");
                });

            modelBuilder.Entity("KinderData.Entities.Plan", b =>
                {
                    b.HasOne("KinderData.Entities.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("KinderData.Entities.Group", "Groups")
                        .WithMany()
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("KinderData.Entities.Salary", b =>
                {
                    b.HasOne("KinderData.Entities.Employee", "Employees")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employees");
                });
#pragma warning restore 612, 618
        }
    }
}
